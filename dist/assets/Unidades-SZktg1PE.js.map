{"version":3,"file":"Unidades-SZktg1PE.js","sources":["../../node_modules/@mui/material/esm/TableFooter/tableFooterClasses.js","../../node_modules/@mui/material/esm/TableFooter/TableFooter.js","../../node_modules/@mui/icons-material/esm/Remove.js","../../node_modules/@mui/icons-material/esm/WhatsApp.js","../../src/services/unidades.service.ts","../../src/services/carrinho.service.ts","../../src/pages/Unidades.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableFooterUtilityClass(slot) {\n  return generateUtilityClass('MuiTableFooter', slot);\n}\nconst tableFooterClasses = generateUtilityClasses('MuiTableFooter', ['root']);\nexport default tableFooterClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableFooterUtilityClass } from \"./tableFooterClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableFooterUtilityClass, classes);\n};\nconst TableFooterRoot = styled('tfoot', {\n  name: 'MuiTableFooter',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-footer-group'\n});\nconst tablelvl2 = {\n  variant: 'footer'\n};\nconst defaultComponent = 'tfoot';\nconst TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableFooter'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableFooterRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableFooter;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.75 13.96c.25.13.41.2.46.3.06.11.04.61-.21 1.18-.2.56-1.24 1.1-1.7 1.12-.46.02-.47.36-2.96-.73-2.49-1.09-3.99-3.75-4.11-3.92-.12-.17-.96-1.38-.92-2.61.05-1.22.69-1.8.95-2.04.24-.26.51-.29.68-.26h.47c.15 0 .36-.06.55.45l.69 1.87c.06.13.1.28.01.44l-.27.41-.39.42c-.12.12-.26.25-.12.5.12.26.62 1.09 1.32 1.78.91.88 1.71 1.17 1.95 1.3.24.14.39.12.54-.04l.81-.94c.19-.25.35-.19.58-.11l1.67.88M12 2a10 10 0 0 1 10 10 10 10 0 0 1-10 10c-1.97 0-3.8-.57-5.35-1.55L2 22l1.55-4.65A9.969 9.969 0 0 1 2 12 10 10 0 0 1 12 2m0 2a8 8 0 0 0-8 8c0 1.72.54 3.31 1.46 4.61L4.5 19.5l2.89-.96A7.95 7.95 0 0 0 12 20a8 8 0 0 0 8-8 8 8 0 0 0-8-8z\"\n}), 'WhatsApp');","import api from './api';\r\n\r\nexport interface Unidade {\r\n  id_unidade: number;\r\n  idunidade: string;\r\n  nomeunidade: string;\r\n  tipo: string;\r\n  pessoa: string;\r\n  email: string;\r\n  recado: string;\r\n  fone: string;\r\n  celular: string;\r\n  comercial: string;\r\n  id_carrinho?: number;\r\n  data_carrinho?: string;\r\n  status_carrinho?: string;\r\n  status_retirada?: string;\r\n  total_carrinho?: number;\r\n}\r\n\r\nexport interface FiltroUnidade {\r\n  nomeunidade?: string;\r\n  pessoa?: string;\r\n  id_carrinho?: number;\r\n  status_carrinho?: string;\r\n  status_retirada?: string;\r\n}\r\n\r\nexport const UnidadesService = {\r\n  listar: async (filtros?: FiltroUnidade) => {\r\n    try {\r\n      console.log('Iniciando busca com filtros:', filtros);\r\n      \r\n      const response = await api.get<Unidade[]>('/api/v1/unidades', { \r\n        params: filtros\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erro na busca:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  excluir: async (id: number) => {\r\n    try {\r\n      await api.delete(`/api/v1/unidades/${id}`);\r\n    } catch (error) {\r\n      console.error('Erro ao excluir:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","import api from './api';\r\n\r\nexport interface CarrinhoItem {\r\n  id_carrinho?: number;\r\n  id_carrinho_item?: number;\r\n  id_produto: number;\r\n  quantidade: number;\r\n}\r\n\r\nexport interface Carrinho {\r\n  id_carrinho?: number;\r\n  id_unidade: number;\r\n  data?: string;\r\n  total: number;\r\n  status: string;\r\n  status_retirada?: string;\r\n  itens: CarrinhoItem[];\r\n}\r\n\r\nexport interface CarrinhoListagem {\r\n  id_carrinho: number;\r\n  id_unidade: number;\r\n  data: string;\r\n  total: number;\r\n  status: string;\r\n  status_retirada: string;\r\n  nomeunidade: string;\r\n}\r\n\r\nclass CarrinhoService {\r\n  private readonly baseUrl = '/api/v1/carrinhos';\r\n\r\n  async listar(): Promise<CarrinhoListagem[]> {\r\n    const response = await api.get<CarrinhoListagem[]>(this.baseUrl);\r\n    return response.data;\r\n  }\r\n\r\n  async buscarPorId(id: number): Promise<Carrinho> {\r\n    const response = await api.get<Carrinho>(`${this.baseUrl}/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async buscarPorUnidade(idUnidade: number): Promise<CarrinhoListagem[]> {\r\n    const response = await api.get<CarrinhoListagem[]>(`${this.baseUrl}/unidade/${idUnidade}`);\r\n    return response.data;\r\n  }\r\n\r\n  async criar(carrinho: Carrinho): Promise<Carrinho> {\r\n    const response = await api.post<Carrinho>(this.baseUrl, carrinho);\r\n    return response.data;\r\n  }\r\n\r\n  async atualizar(id: number, carrinho: Omit<Carrinho, 'id_carrinho'>): Promise<Carrinho> {\r\n    const response = await api.put<Carrinho>(`${this.baseUrl}/${id}`, carrinho);\r\n    return response.data;\r\n  }\r\n\r\n  async atualizarStatus(id: number, status: string): Promise<Carrinho> {\r\n    const response = await api.patch<Carrinho>(`${this.baseUrl}/${id}/status`, { status });\r\n    return response.data;\r\n  }\r\n\r\n  async atualizarStatusRetirada(id: number, statusRetirada: string): Promise<Carrinho> {\r\n    const response = await api.patch<Carrinho>(`${this.baseUrl}/${id}/status-retirada`, { status_retirada: statusRetirada });\r\n    return response.data;\r\n  }\r\n\r\n  async excluir(id: number): Promise<void> {\r\n    await api.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n\r\nexport default new CarrinhoService(); ","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  Alert,\r\n  TablePagination,\r\n  Fade,\r\n  styled,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TableFooter,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  ShoppingCart as ShoppingCartIcon,\r\n  Add as AddCircleIcon,\r\n  Remove as RemoveCircleIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n} from '@mui/icons-material';\r\nimport { UnidadesService, Unidade, FiltroUnidade } from '../services/unidades.service';\r\nimport ProdutosService, { Produto } from '../services/produtos.service';\r\nimport CarrinhoService from '../services/carrinho.service';\r\n\r\n// Estilização para células da tabela\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  '&.MuiTableCell-head': {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\n// Estilização para linhas da tabela\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.action.selected,\r\n  },\r\n}));\r\n\r\nconst StyledStatus = styled('span')<{ status: string }>(({ status }) => {\r\n  let backgroundColor = '#e0e0e0';\r\n  let color = '#000000';\r\n\r\n  switch (status) {\r\n    case 'Ativo':\r\n      backgroundColor = '#4caf50';\r\n      color = '#ffffff';\r\n      break;\r\n    case 'Inativo':\r\n      backgroundColor = '#f44336';\r\n      color = '#ffffff';\r\n      break;\r\n  }\r\n\r\n  return {\r\n    backgroundColor,\r\n    color,\r\n    padding: '3px 10px',\r\n    borderRadius: '12px',\r\n    display: 'inline-block',\r\n    fontSize: '0.875rem',\r\n    fontWeight: '500',\r\n  };\r\n});\r\n\r\nconst StyledStatusRetirada = styled('span')<{ status: string }>(({ status }) => {\r\n  let backgroundColor = '#e0e0e0';\r\n  let color = '#000000';\r\n\r\n  switch (status) {\r\n    case 'Retirado':\r\n      backgroundColor = '#4caf50';\r\n      color = '#ffffff';\r\n      break;\r\n    case 'Não Retirado':\r\n      backgroundColor = '#f44336';\r\n      color = '#ffffff';\r\n      break;\r\n  }\r\n\r\n  return {\r\n    backgroundColor,\r\n    color,\r\n    padding: '3px 10px',\r\n    borderRadius: '12px',\r\n    display: 'inline-block',\r\n    fontSize: '0.875rem',\r\n    fontWeight: '500',\r\n  };\r\n});\r\n\r\nexport default function Unidades() {\r\n  const [unidades, setUnidades] = useState<Unidade[]>([]);\r\n  const [nomeUnidade, setNomeUnidade] = useState('');\r\n  const [nomePessoa, setNomePessoa] = useState('');\r\n  const [numeroPedido, setNumeroPedido] = useState('');\r\n  const [statusCarrinho, setStatusCarrinho] = useState('');\r\n  const [statusRetirada, setStatusRetirada] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [erro, setErro] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [modalCarrinhoAberto, setModalCarrinhoAberto] = useState(false);\r\n  const [unidadeSelecionada, setUnidadeSelecionada] = useState<Unidade | null>(null);\r\n  const [produtos, setProdutos] = useState<Produto[]>([]);\r\n  const [loadingProdutos, setLoadingProdutos] = useState(false);\r\n  const [quantidades, setQuantidades] = useState<{ [key: number]: number }>({});\r\n  const [dataCarrinho, setDataCarrinho] = useState<Date>(new Date());\r\n  const [statusCarrinhoModal, setStatusCarrinhoModal] = useState<string>('Aberto');\r\n  const [statusRetiradaCarrinhoModal, setStatusRetiradaCarrinhoModal] = useState<string>('Aguardando');\r\n  const [carrinhoExistente, setCarrinhoExistente] = useState<boolean>(false);\r\n  const [carrinhoId, setCarrinhoId] = useState<number | null>(null);\r\n  const [erroCarrinho, setErroCarrinho] = useState<string>('');\r\n\r\n  // Função auxiliar para converter data do formato brasileiro para Date\r\n  const converterDataBrParaDate = (dataBr: string): Date => {\r\n    const [data, hora] = dataBr.split(' ');\r\n    const [dia, mes, ano] = data.split('/');\r\n    const [horas, minutos] = hora.split(':');\r\n    return new Date(Number(ano), Number(mes) - 1, Number(dia), Number(horas), Number(minutos));\r\n  };\r\n\r\n  // Função auxiliar para formatar data para o input datetime-local\r\n  const formatarDataParaInput = (data: Date): string => {\r\n    const offset = data.getTimezoneOffset();\r\n    const dataLocal = new Date(data.getTime() - (offset * 60 * 1000));\r\n    return dataLocal.toISOString().slice(0, 16);\r\n  };\r\n\r\n  const formatarDataParaBackend = (data: Date): string => {\r\n    return data.toLocaleDateString('pt-BR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    }).replace(',', '');\r\n  };\r\n\r\n  const buscarUnidades = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setErro('');\r\n      \r\n      const filtros: FiltroUnidade = {};\r\n      if (nomeUnidade) filtros.nomeunidade = nomeUnidade;\r\n      if (nomePessoa) filtros.pessoa = nomePessoa;\r\n      if (numeroPedido) filtros.id_carrinho = Number(numeroPedido);\r\n      if (statusCarrinho) filtros.status_carrinho = statusCarrinho;\r\n      if (statusRetirada) filtros.status_retirada = statusRetirada;\r\n      \r\n      const data = await UnidadesService.listar(filtros);\r\n      // Ordena as unidades por nome\r\n      const unidadesOrdenadas = [...data].sort((a, b) => \r\n        a.nomeunidade.localeCompare(b.nomeunidade, 'pt-BR')\r\n      );\r\n      setUnidades(unidadesOrdenadas);\r\n      setPage(0);\r\n    } catch (error: any) {\r\n      setErro(`Erro ao buscar unidades: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const carregarProdutos = async () => {\r\n    try {\r\n      setLoadingProdutos(true);\r\n      const data = await ProdutosService.listar();\r\n      // Filtra apenas produtos ativos\r\n      setProdutos(data.filter(produto => produto.status === 'Ativo'));\r\n    } catch (error: any) {\r\n      setErro(`Erro ao carregar produtos: ${error.message}`);\r\n    } finally {\r\n      setLoadingProdutos(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      buscarUnidades();\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [nomeUnidade, nomePessoa, numeroPedido, statusCarrinho, statusRetirada]);\r\n\r\n  const handleChangePage = (_: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const unidadesPaginadas = unidades.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const handleAbrirCarrinho = async (unidade: Unidade) => {\r\n    try {\r\n      setLoading(true);\r\n      setErroCarrinho('');\r\n      setUnidadeSelecionada(unidade);\r\n\r\n      // Busca carrinhos da unidade\r\n      const carrinhos = await CarrinhoService.buscarPorUnidade(unidade.id_unidade);\r\n      \r\n      // Pega o carrinho mais recente (primeiro da lista, já que vem ordenado por data DESC)\r\n      const ultimoCarrinho = carrinhos[0];\r\n\r\n      if (ultimoCarrinho) {\r\n        // Se encontrou carrinho, carrega os dados dele\r\n        const carrinhoDetalhado = await CarrinhoService.buscarPorId(ultimoCarrinho.id_carrinho);\r\n        \r\n        setCarrinhoId(ultimoCarrinho.id_carrinho);\r\n        setCarrinhoExistente(true);\r\n        // Converte a data do formato brasileiro para Date\r\n        setDataCarrinho(converterDataBrParaDate(ultimoCarrinho.data));\r\n        setStatusCarrinhoModal(ultimoCarrinho.status);\r\n        setStatusRetiradaCarrinhoModal(ultimoCarrinho.status_retirada);\r\n\r\n        // Carrega os produtos e depois configura as quantidades\r\n        await carregarProdutos();\r\n        \r\n        // Configura as quantidades dos itens existentes\r\n        const quantidadesExistentes = carrinhoDetalhado.itens.reduce((acc, item) => ({\r\n          ...acc,\r\n          [item.id_produto]: item.quantidade\r\n        }), {});\r\n        \r\n        setQuantidades(quantidadesExistentes);\r\n      } else {\r\n        // Inicializa um novo carrinho silenciosamente\r\n        await inicializarNovoCarrinho();\r\n      }\r\n\r\n      setModalCarrinhoAberto(true);\r\n    } catch (error: any) {\r\n      // Só mostra erro se não for o caso de \"nenhum carrinho encontrado\"\r\n      if (error.response?.status !== 404) {\r\n        let mensagemErro = 'Erro ao carregar carrinho';\r\n        if (error.response?.data?.error) {\r\n          mensagemErro = error.response.data.error;\r\n        } else if (error.message) {\r\n          mensagemErro = error.message;\r\n        }\r\n        setErroCarrinho(mensagemErro);\r\n      } else {\r\n        // Se for 404 (nenhum carrinho encontrado), inicializa um novo\r\n        await inicializarNovoCarrinho();\r\n        setModalCarrinhoAberto(true);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const inicializarNovoCarrinho = async () => {\r\n    setCarrinhoId(null);\r\n    setCarrinhoExistente(false);\r\n    setDataCarrinho(new Date());\r\n    setStatusCarrinhoModal('Aberto');\r\n    setStatusRetiradaCarrinhoModal('Aguardando');\r\n    setQuantidades({});\r\n    await carregarProdutos();\r\n  };\r\n\r\n  const handleSalvarCarrinho = async () => {\r\n    if (!unidadeSelecionada) {\r\n      setErroCarrinho('Unidade não selecionada');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setErroCarrinho('');\r\n\r\n      const itens = Object.entries(quantidades)\r\n        .filter(([_, quantidade]) => quantidade > 0)\r\n        .map(([idProduto, quantidade]) => ({\r\n          id_produto: Number(idProduto),\r\n          quantidade\r\n        }));\r\n\r\n      if (itens.length === 0) {\r\n        setErroCarrinho('Adicione pelo menos um produto ao carrinho');\r\n        return;\r\n      }\r\n\r\n      const carrinhoBase = {\r\n        id_unidade: unidadeSelecionada.id_unidade,\r\n        data: formatarDataParaBackend(dataCarrinho),\r\n        total: calcularTotalGeral(),\r\n        status: statusCarrinhoModal,\r\n        status_retirada: statusRetiradaCarrinhoModal,\r\n        itens\r\n      };\r\n\r\n      let response;\r\n      if (carrinhoExistente && carrinhoId) {\r\n        response = await CarrinhoService.atualizar(carrinhoId, carrinhoBase);\r\n        alert(`Pedido #${carrinhoId} atualizado com sucesso!`);\r\n      } else {\r\n        response = await CarrinhoService.criar(carrinhoBase);\r\n        alert(`Pedido #${response.id_carrinho} criado com sucesso!`);\r\n      }\r\n      \r\n      handleFecharCarrinho();\r\n      await buscarUnidades(); // Atualiza a grid após salvar\r\n    } catch (error: any) {\r\n      let mensagemErro = 'Erro ao salvar carrinho';\r\n      \r\n      if (error.response) {\r\n        mensagemErro = error.response.data?.error || error.response.data?.message || mensagemErro;\r\n      } else if (error.message) {\r\n        mensagemErro = error.message;\r\n      }\r\n      \r\n      setErroCarrinho(`${mensagemErro}. Por favor, tente novamente.`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFecharCarrinho = async () => {\r\n    setModalCarrinhoAberto(false);\r\n    setUnidadeSelecionada(null);\r\n    setCarrinhoExistente(false);\r\n    setDataCarrinho(new Date());\r\n    setStatusCarrinhoModal('Aberto');\r\n    setStatusRetiradaCarrinhoModal('Aguardando');\r\n    setQuantidades({});\r\n    setCarrinhoId(null);\r\n    setErroCarrinho('');\r\n    buscarUnidades();\r\n  };\r\n\r\n  const handleQuantidadeChange = (produtoId: number, quantidade: number) => {\r\n    setQuantidades(prev => ({\r\n      ...prev,\r\n      [produtoId]: quantidade\r\n    }));\r\n  };\r\n\r\n  const handleIncrementarQuantidade = (produtoId: number) => {\r\n    setQuantidades(prev => ({\r\n      ...prev,\r\n      [produtoId]: (prev[produtoId] || 0) + 1\r\n    }));\r\n  };\r\n\r\n  const handleDecrementarQuantidade = (produtoId: number) => {\r\n    setQuantidades(prev => ({\r\n      ...prev,\r\n      [produtoId]: Math.max(0, (prev[produtoId] || 0) - 1)\r\n    }));\r\n  };\r\n\r\n  const formatarMoeda = (valor: number): string => {\r\n    return valor.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL'\r\n    });\r\n  };\r\n\r\n  const calcularTotalGeral = (): number => {\r\n    return produtos.reduce((total, produto) => {\r\n      const quantidade = quantidades[produto.id_produto] || 0;\r\n      return total + (produto.valor * quantidade);\r\n    }, 0);\r\n  };\r\n\r\n  const formatarMensagemWhatsApp = async (unidade: Unidade, produtosAtuais: Produto[], quantidadesAtuais: { [key: number]: number }, status: string): Promise<string> => {\r\n    let mensagem = '';\r\n    const numeroPedido = carrinhoId || unidade.id_carrinho;\r\n\r\n    if (status === 'Pago') {\r\n      mensagem = `Olá ${unidade.pessoa}!\\n\\n`;\r\n      mensagem += `Seu pedido ${numeroPedido ? `#${numeroPedido}` : ''} está pronto para retirada.\\n\\n`;\r\n      mensagem += `*Instruções de Retirada:*\\n`;\r\n      mensagem += `1. Dirija-se ao local de retirada\\n`;\r\n      if (numeroPedido) {\r\n        mensagem += `2. Informe o número do seu pedido: #${numeroPedido}\\n`;\r\n      }\r\n      mensagem += `3. Status atual: ${statusRetiradaCarrinhoModal}\\n\\n`;\r\n      mensagem += `*Dados do Cliente:*\\n`;\r\n      mensagem += `Unidade: ${unidade.nomeunidade}\\n`;\r\n      mensagem += `Pessoa: ${unidade.pessoa}\\n`;\r\n      mensagem += `Tipo: ${unidade.tipo}\\n\\n`;\r\n      mensagem += `*Detalhes do Pedido:*\\n`;\r\n    } else {\r\n      mensagem = `Olá ${unidade.pessoa}!\\n\\n`;\r\n      mensagem += `*Dados do Cliente:*\\n`;\r\n      mensagem += `Unidade: ${unidade.nomeunidade}\\n`;\r\n      mensagem += `Pessoa: ${unidade.pessoa}\\n`;\r\n      mensagem += `Tipo: ${unidade.tipo}\\n\\n`;\r\n      mensagem += `*Detalhes do Pedido:*\\n`;\r\n    }\r\n\r\n    let produtosParaExibir = produtosAtuais;\r\n    let quantidadesParaExibir = quantidadesAtuais;\r\n\r\n    // Se estiver enviando da lista (fora do modal), busca os dados do último carrinho\r\n    if (!modalCarrinhoAberto && unidade.id_carrinho) {\r\n      try {\r\n        const carrinhoDetalhado = await CarrinhoService.buscarPorId(unidade.id_carrinho);\r\n        if (carrinhoDetalhado) {\r\n          // Carrega os produtos\r\n          const todosProdutos = await ProdutosService.listar();\r\n          produtosParaExibir = todosProdutos.filter(p => p.status === 'Ativo');\r\n          \r\n          // Monta o objeto de quantidades a partir dos itens do carrinho\r\n          quantidadesParaExibir = carrinhoDetalhado.itens.reduce((acc, item) => ({\r\n            ...acc,\r\n            [item.id_produto]: item.quantidade\r\n          }), {});\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao buscar detalhes do carrinho:', error);\r\n      }\r\n    }\r\n\r\n    let totalGeral = 0;\r\n    produtosParaExibir.forEach(produto => {\r\n      const quantidade = quantidadesParaExibir[produto.id_produto] || 0;\r\n      if (quantidade > 0) {\r\n        const total = produto.valor * quantidade;\r\n        totalGeral += total;\r\n        mensagem += `- ${produto.descricao}: ${quantidade} x ${formatarMoeda(produto.valor)} = ${formatarMoeda(total)}\\n`;\r\n      }\r\n    });\r\n\r\n    mensagem += `\\n*Total: ${formatarMoeda(totalGeral)}*`;\r\n    \r\n    if (status === 'Aberto') {\r\n      mensagem += `\\n\\nChave PIX (CNPJ): 25.044.410/0001-65`;\r\n      if (numeroPedido) {\r\n        mensagem += `\\n\\nFavor incluir na descrição: Pedido #${numeroPedido}`;\r\n      }\r\n    }\r\n\r\n    return encodeURIComponent(mensagem);\r\n  };\r\n\r\n  const enviarPedidoWhatsApp = async (unidade: Unidade, status: string) => {\r\n    if (!unidade.celular) {\r\n      alert('Esta unidade não possui número de celular cadastrado.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const telefone = unidade.celular.replace(/\\D/g, '');\r\n      const mensagem = await formatarMensagemWhatsApp(unidade, produtos, quantidades, status);\r\n      const url = `https://wa.me/55${telefone}?text=${mensagem}`;\r\n      window.open(url, '_blank');\r\n    } catch (error) {\r\n      console.error('Erro ao enviar mensagem:', error);\r\n      alert('Erro ao preparar a mensagem. Por favor, tente novamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 0, m: 0, width: '100%'}}>\r\n      <Typography \r\n        variant=\"h4\" \r\n        component=\"h1\" \r\n        gutterBottom\r\n        sx={{ color: 'primary.main', fontWeight: 'medium' }}\r\n      >\r\n        Venda de Pulseiras\r\n      </Typography>\r\n\r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Box  sx={{\r\n                    display: 'flex',\r\n                    flexDirection: { xs: 'column', md: 'row' },\r\n                    gap: 2,\r\n                    alignItems: 'stretch',\r\n                    \r\n                  }}>\r\n          <Box sx={{ flex: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nome da Unidade\"\r\n              value={nomeUnidade}\r\n              onChange={(e) => setNomeUnidade(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ flex: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nome da Pessoa\"\r\n              value={nomePessoa}\r\n              onChange={(e) => setNomePessoa(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ flex: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nº do Pedido\"\r\n              value={numeroPedido}\r\n              onChange={(e) => {\r\n                const value = e.target.value.replace(/\\D/g, ''); // Permite apenas números\r\n                setNumeroPedido(value);\r\n              }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ flex: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label=\"Status do Pedido\"\r\n              value={statusCarrinho}\r\n              onChange={(e) => setStatusCarrinho(e.target.value)}\r\n              SelectProps={{\r\n                native: true\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            >\r\n              <option value=\"\">Todos</option>\r\n              <option value=\"Sem Pedido\">Sem Pedido</option>\r\n              <option value=\"Aberto\">Aberto</option>\r\n              <option value=\"Pago\">Pago</option>\r\n              <option value=\"Cancelado\">Cancelado</option>\r\n            </TextField>\r\n          </Box>\r\n          <Box sx={{ flex: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label=\"Status de Retirada\"\r\n              value={statusRetirada}\r\n              onChange={(e) => setStatusRetirada(e.target.value)}\r\n              SelectProps={{\r\n                native: true\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            >\r\n              <option value=\"\">Todos</option>\r\n              <option value=\"Sem Pedido\">Sem Pedido</option>\r\n              <option value=\"Aguardando\">Aguardando</option>\r\n              <option value=\"Separado\">Separado</option>\r\n              <option value=\"Retirado\">Retirado</option>\r\n              <option value=\"Cancelado\">Cancelado</option>\r\n            </TextField>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {erro && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {erro}\r\n        </Alert>\r\n      )}\r\n\r\n      <Paper>\r\n      <Fade in={!loading} timeout={loading ? 0 : 1000}>\r\n      <TableContainer sx={{ width: '100%', overflowX: 'auto' }}>\r\n      <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <StyledTableCell sx={{ width: 100, minWidth: 100 }}>Ações</StyledTableCell>\r\n                <StyledTableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>ID</StyledTableCell>\r\n                <StyledTableCell>Unidade</StyledTableCell>\r\n                <StyledTableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Tipo</StyledTableCell>\r\n                <StyledTableCell>Pessoa</StyledTableCell>\r\n                <StyledTableCell>Nº Pedido</StyledTableCell>\r\n                <StyledTableCell>Status Pedido</StyledTableCell>\r\n                <StyledTableCell>Status Retirada</StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ display: { xs: 'none', md: 'table-cell' } }}>Total</StyledTableCell>\r\n                <StyledTableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Email</StyledTableCell>\r\n                <StyledTableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Telefones</StyledTableCell>\r\n                <StyledTableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>ID Lello</StyledTableCell>\r\n         \r\n                    </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n              {unidadesPaginadas.map((unidade) => (\r\n                <StyledTableRow key={unidade.id_unidade}>\r\n                  {/* Ações – sempre visível */}\r\n                  <TableCell sx={{ width: 100, minWidth: 100 }}>\r\n                    <Box sx={{ display: 'flex', gap: 1, justifyContent: 'start', flexWrap: { xs: 'wrap', sm: 'nowrap' } }}>\r\n                      <IconButton color=\"primary\" onClick={() => handleAbrirCarrinho(unidade)} size=\"small\">\r\n                        <ShoppingCartIcon />\r\n                      </IconButton>\r\n                      {(unidade.status_carrinho === 'Pago' || unidade.status_carrinho === 'Aberto') && unidade.celular && (\r\n                        <IconButton\r\n                          color={unidade.status_carrinho === 'Pago' ? 'success' : 'primary'}\r\n                          onClick={async () => await enviarPedidoWhatsApp(unidade, unidade.status_carrinho || 'Aberto')}\r\n                          size=\"small\"\r\n                          title={`Enviar ${unidade.status_carrinho === 'Pago' ? 'instruções de retirada' : 'dados para pagamento'} por WhatsApp`}\r\n                        >\r\n                          <WhatsAppIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Box>\r\n                  </TableCell>\r\n\r\n                  {/* Campos com visibilidade condicional */}\r\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{unidade.id_unidade}</TableCell>\r\n                  <TableCell>{unidade.nomeunidade}</TableCell>\r\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{unidade.tipo}</TableCell>\r\n                  <TableCell\r\n                      sx={{\r\n                        whiteSpace: { xs: 'normal', md: 'nowrap' },\r\n                        wordBreak: 'break-word',\r\n                        maxWidth: { xs: 120, md: 'initial' },\r\n                        overflowWrap: 'break-word',\r\n                      }}\r\n                    >\r\n                      {unidade.pessoa}\r\n                    </TableCell>\r\n                  <TableCell>{unidade.id_carrinho || '-'}</TableCell>\r\n                  <TableCell>\r\n                    {unidade.status_carrinho ? (\r\n                      <StyledStatus status={unidade.status_carrinho}>\r\n                        {unidade.status_carrinho}\r\n                      </StyledStatus>\r\n                    ) : '-'}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {unidade.status_retirada ? (\r\n                      <StyledStatusRetirada status={unidade.status_retirada}>\r\n                        {unidade.status_retirada}\r\n                      </StyledStatusRetirada>\r\n                    ) : '-'}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" sx={{ display: { xs: 'none', md: 'table-cell' } }}>\r\n                    {unidade.total_carrinho ? formatarMoeda(unidade.total_carrinho) : '-'}\r\n                  </TableCell>\r\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{unidade.email}</TableCell>\r\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>\r\n                    {[unidade.celular, unidade.fone, unidade.comercial].filter(tel => tel).join(' / ')}\r\n                  </TableCell>\r\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{unidade.idunidade}</TableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n             \r\n            </Table>\r\n          </TableContainer>\r\n        </Fade>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50]}\r\n          component=\"div\"\r\n          count={unidades.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          labelRowsPerPage=\"Itens por página\"\r\n          labelDisplayedRows={({ from, to, count }) =>\r\n            `${from}-${to} de ${count}`\r\n          }\r\n        />\r\n      </Paper>\r\n\r\n      <Dialog \r\n        open={modalCarrinhoAberto} \r\n        onClose={() => handleFecharCarrinho()}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {carrinhoExistente ? 'Editar' : 'Novo'} Carrinho de Compras - {unidadeSelecionada?.nomeunidade} ({unidadeSelecionada?.tipo}) - {unidadeSelecionada?.pessoa}\r\n          {carrinhoExistente && carrinhoId && (\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n              Pedido #{carrinhoId}\r\n            </Typography>\r\n          )}\r\n        </DialogTitle>\r\n        <DialogContent sx={{ px: { xs: 1, sm: 3 } }}>\r\n          {erroCarrinho && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {erroCarrinho}\r\n            </Alert>\r\n          )}\r\n          <Box sx={{ mt: 2 }}>\r\n            <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, gap: 2, mb: 3 }}>\r\n              <Box sx={{ flex: 1 }}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"datetime-local\"\r\n                  label=\"Data\"\r\n                  value={formatarDataParaInput(dataCarrinho)}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    try {\r\n                      const novaData = new Date(e.target.value);\r\n                      if (!isNaN(novaData.getTime())) {\r\n                        setDataCarrinho(novaData);\r\n                      }\r\n                    } catch (error) {\r\n                      // Ignora erros de parsing de data inválida\r\n                    }\r\n                  }}\r\n                  InputLabelProps={{\r\n                    shrink: true\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box sx={{ flex: 1 }}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  label=\"Status\"\r\n                  value={statusCarrinhoModal}\r\n                  onChange={(e) => setStatusCarrinhoModal(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true\r\n                  }}\r\n                >\r\n                  <option value=\"Aberto\">Aberto</option>\r\n                  <option value=\"Pago\">Pago</option>\r\n                  <option value=\"Cancelado\">Cancelado</option>\r\n                </TextField>\r\n              </Box>\r\n              <Box sx={{ flex: 1 }}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  label=\"Status de Retirada\"\r\n                  value={statusRetiradaCarrinhoModal}\r\n                  onChange={(e) => setStatusRetiradaCarrinhoModal(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true\r\n                  }}\r\n                >\r\n                  <option value=\"Aguardando\">Aguardando</option>\r\n                  <option value=\"Separado\">Separado</option>\r\n                  <option value=\"Retirado\">Retirado</option>\r\n                  <option value=\"Cancelado\">Cancelado</option>\r\n                </TextField>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Produtos Disponíveis\r\n            </Typography>\r\n            \r\n            <TableContainer component={Paper} sx={{ mt: 2, overflowX: 'auto' }}>\r\n            <Table size=\"small\" sx={{ minWidth: 600 }}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell>ID</StyledTableCell>\r\n                    <StyledTableCell>Descrição</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Quantidade</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Valor</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Total</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {loadingProdutos ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5} align=\"center\" sx={{ py: 3 }}>\r\n                        <CircularProgress size={40} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ) : produtos.length > 0 ? (\r\n                    produtos.map((produto) => (\r\n                      <StyledTableRow key={produto.id_produto}>\r\n                        <TableCell>{produto.id_produto}</TableCell>\r\n                        <TableCell>{produto.descricao}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1 }}>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => handleDecrementarQuantidade(produto.id_produto)}\r\n                              color=\"primary\"\r\n                            >\r\n                              <RemoveCircleIcon />\r\n                            </IconButton>\r\n                            <TextField\r\n                              type=\"number\"\r\n                              size=\"small\"\r\n                              value={quantidades[produto.id_produto] || 0}\r\n                              onChange={(e) => handleQuantidadeChange(produto.id_produto, Number(e.target.value))}\r\n                              inputProps={{\r\n                                min: 0,\r\n                                style: { textAlign: 'center' }\r\n                              }}\r\n                              sx={{ width: '80px' }}\r\n                            />\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => handleIncrementarQuantidade(produto.id_produto)}\r\n                              color=\"primary\"\r\n                            >\r\n                              <AddCircleIcon />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {formatarMoeda(produto.valor)}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n                          {formatarMoeda(produto.valor * (quantidades[produto.id_produto] || 0))}\r\n                        </TableCell>\r\n                      </StyledTableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5} align=\"center\">\r\n                        Nenhum produto encontrado\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                <TableFooter>\r\n                  <TableRow>\r\n                    <TableCell colSpan={4} align=\"right\" sx={{ fontWeight: 'bold', fontSize: '1.1em' }}>\r\n                      Total Geral:\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', fontSize: '1.1em', color: 'primary.main' }}>\r\n                      {formatarMoeda(calcularTotalGeral())}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </TableContainer>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => handleFecharCarrinho()}\r\n            disabled={loading}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            disabled={calcularTotalGeral() === 0 || loading}\r\n            onClick={handleSalvarCarrinho}\r\n            sx={{ fontWeight: 'bold', minWidth: 150 }}\r\n          >\r\n            {loading ? (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <CircularProgress size={20} color=\"inherit\" />\r\n                <span>Salvando...</span>\r\n              </Box>\r\n            ) : (\r\n              'Finalizar Pedido'\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}"],"names":["getTableFooterUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TableFooterRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","TableFooter","React.forwardRef","inProps","ref","useDefaultProps","className","component","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","jsx","Tablelvl2Context","Provider","value","children","as","clsx","role","RemoveCircleIcon","createSvgIcon","jsxRuntimeExports","d","WhatsAppIcon","UnidadesService","async","filtros","console","log","api","get","params","data","error","CarrinhoService$1","constructor","__publicField","this","listar","baseUrl","buscarPorId","id","buscarPorUnidade","idUnidade","criar","carrinho","post","atualizar","put","atualizarStatus","status","patch","atualizarStatusRetirada","statusRetirada","status_retirada","excluir","delete","StyledTableCell","TableCell","theme","backgroundColor","palette","primary","main","color","common","white","fontWeight","StyledTableRow","TableRow","action","hover","selected","StyledStatus","padding","borderRadius","fontSize","StyledStatusRetirada","Unidades","unidades","setUnidades","useState","nomeUnidade","setNomeUnidade","nomePessoa","setNomePessoa","numeroPedido","setNumeroPedido","statusCarrinho","setStatusCarrinho","setStatusRetirada","loading","setLoading","erro","setErro","page","setPage","rowsPerPage","setRowsPerPage","modalCarrinhoAberto","setModalCarrinhoAberto","unidadeSelecionada","setUnidadeSelecionada","produtos","setProdutos","loadingProdutos","setLoadingProdutos","quantidades","setQuantidades","dataCarrinho","setDataCarrinho","Date","statusCarrinhoModal","setStatusCarrinhoModal","statusRetiradaCarrinhoModal","setStatusRetiradaCarrinhoModal","carrinhoExistente","setCarrinhoExistente","carrinhoId","setCarrinhoId","erroCarrinho","setErroCarrinho","buscarUnidades","nomeunidade","pessoa","id_carrinho","Number","status_carrinho","unidadesOrdenadas","sort","a","b","localeCompare","message","carregarProdutos","ProdutosService","filter","produto","useEffect","timer","setTimeout","clearTimeout","unidadesPaginadas","slice","handleAbrirCarrinho","unidade","ultimoCarrinho","CarrinhoService","id_unidade","carrinhoDetalhado","dataBr","hora","split","dia","mes","ano","horas","minutos","converterDataBrParaDate","quantidadesExistentes","itens","reduce","acc","item","id_produto","quantidade","inicializarNovoCarrinho","_a","response","mensagemErro","_c","_b","handleFecharCarrinho","formatarMoeda","valor","toLocaleString","style","currency","calcularTotalGeral","total","enviarPedidoWhatsApp","celular","telefone","replace","mensagem","produtosAtuais","quantidadesAtuais","tipo","produtosParaExibir","quantidadesParaExibir","p","totalGeral","forEach","descricao","encodeURIComponent","formatarMensagemWhatsApp","url","window","open","alert","Box","sx","m","width","Typography","gutterBottom","Paper","mb","jsxs","flexDirection","xs","md","gap","alignItems","flex","TextField","fullWidth","label","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","select","SelectProps","native","InputLabelProps","shrink","Alert","severity","Fade","in","timeout","TableContainer","overflowX","Table","TableHead","minWidth","align","TableBody","map","justifyContent","flexWrap","sm","IconButton","onClick","size","ShoppingCartIcon","title","whiteSpace","wordBreak","maxWidth","overflowWrap","total_carrinho","email","fone","comercial","tel","join","idunidade","TablePagination","rowsPerPageOptions","count","length","onPageChange","_","newPage","onRowsPerPageChange","event","parseInt","labelRowsPerPage","labelDisplayedRows","from","to","Dialog","onClose","DialogTitle","DialogContent","px","mt","type","offset","getTimezoneOffset","getTime","toISOString","formatarDataParaInput","novaData","isNaN","colSpan","py","CircularProgress","handleDecrementarQuantidade","produtoId","prev","Math","max","handleQuantidadeChange","inputProps","min","textAlign","handleIncrementarQuantidade","AddCircleIcon","DialogActions","Button","disabled","Object","entries","idProduto","carrinhoBase","toLocaleDateString","day","month","year","hour","minute","second"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}